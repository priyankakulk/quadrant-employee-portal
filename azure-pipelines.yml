trigger:
  - main
 
pool:
  vmImage: 'ubuntu-latest'
 
stages:
  - stage: Build
    displayName: "Build Frontend and Backend"
    jobs:
      - job: frontend
        displayName: "Build Frontend"
        steps:
          - checkout: self
            clean: true  # ‚¨ÖÔ∏è Ensures fresh copy from GitHub
 
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
 
          - script: |
              cd frontend
              npm install
              npm run build
            displayName: 'Install & Build Frontend'
 
          - script: |
              cd frontend/build
              zip -r ../../frontend.zip .
            displayName: 'Zip Frontend Build Output'
 
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'frontend.zip'
              artifactName: 'Frontend'
              publishLocation: 'Container'
 
      - job: backend
        displayName: "Build Backend"
        steps:
          - checkout: self
            clean: true  # ‚¨ÖÔ∏è Ensures fresh copy from GitHub
 
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
 
          - script: |
              cd backend
              pip install -r requirements.txt
              zip -r ../backend.zip .
            displayName: 'Install & Zip Backend Code'
 
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'backend.zip'
              artifactName: 'Backend'
              publishLocation: 'Container'
 
  - stage: Deploy
    displayName: "Deploy Frontend and Backend"
    dependsOn: Build
    jobs:
      - job: deploy_frontend
        displayName: "Deploy Frontend to App Service"
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'Frontend'
              downloadPath: '$(System.ArtifactsDirectory)'
 
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'AzureConnection'
              appName: 'gateway-app'  # üåê Frontend App Service
              package: '$(System.ArtifactsDirectory)/Frontend/frontend.zip'
 
      - job: deploy_backend
        displayName: "Deploy Backend to App Service"
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'Backend'
              downloadPath: '$(System.ArtifactsDirectory)'
 
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'AzureConnection'
              appName: 'gateway-backend-api'  # üîå Backend App Service
              package: '$(System.ArtifactsDirectory)/Backend/backend.zip'