trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: "Build Frontend and Backend"
    jobs:
      - job: frontend
        displayName: "Build Frontend"
        steps:
          - checkout: self
            clean: true

          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - script: |
              echo "Installing frontend dependencies..."
              cd frontend
              npm install
            displayName: 'Install Frontend Dependencies'

          - script: |
              echo "Building frontend..."
              cd frontend
              npm run build
            displayName: 'Build Frontend'

          - script: |
              echo "Zipping frontend build output..."
              cd frontend/build
              zip -r ../../frontend.zip .
            displayName: 'Zip Frontend Build Output'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'frontend.zip'
              artifactName: 'Frontend'
              publishLocation: 'Container'

      - job: backend
        displayName: "Build Backend"
        steps:
          - checkout: self
            clean: true

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
            displayName: 'Set Python Version'

          - script: |
              echo "Installing backend dependencies..."
              cd backend
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              zip -r ../backend.zip .
            displayName: 'Install & Zip Backend Code'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'backend.zip'
              artifactName: 'Backend'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: "Deploy Frontend and Backend"
    dependsOn: Build
    jobs:
      - job: deploy
        displayName: "Deploy"
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'Backend'
              downloadPath: '$(Pipeline.Workspace)'

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
            displayName: 'Set Python Version for Deployment'

          - script: |
              echo "Unzipping backend artifact..."
              unzip $(Pipeline.Workspace)/Backend/backend.zip -d backend
              cd backend

              echo "Installing backend dependencies..."
              python -m pip install --upgrade pip
              pip install -r requirements.txt

              echo "Starting backend with Uvicorn..."
              nohup python -m uvicorn app.main:app --host 127.0.0.1 --port 8000 &

              echo "Waiting for API to start..."
              sleep 10

              echo "Testing API endpoint..."
              curl http://127.0.0.1:8000/docs || echo "API not reachable"
            displayName: 'Start & Test Backend API'
